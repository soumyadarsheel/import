apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: "com.bugsnag.android.gradle"
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"


project.ext.envConfigFiles = [
        dev: ".env",
        prod: ".env.prod"
]

apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"



/* This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '..'
    // root = file("../")
    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
    // reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
    // codegenDir = file("../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
    // cliFile = file("../node_modules/react-native/cli.js")
    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]
    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    bundleAssetName = "frontm.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []
    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]
}


project.ext.react = [
     nodeExecutableAndArgs: ["node", "--max_old_space_size=12288"],
     entryFile: "index.js",
     bundleAssetName: "frontm.bundle",
]


/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    namespace "com.frontm.frontm"
    defaultConfig {
        applicationId "com.frontm.onship"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 136
        versionName "2.2.3"
        multiDexEnabled true
        renderscriptTargetApi 23
        renderscriptSupportModeEnabled true
        resValue "string", "build_config_package", "com.frontm.frontm" //Keep this as it is, used in react--native-configuration
        buildConfigField 'String', 'appType', '"onship"'
        buildConfigField 'String', 'domain', '"onship"'
        missingDimensionStrategy 'react-native-camera', 'general', "store", "play"
    }

    signingConfigs {
        debug {
            storeFile file("frontm-debug.keystore")
        }
        release {
            if (project.hasProperty('FRONTM_RELEASE_STORE_FILE')) {
                storeFile file(FRONTM_RELEASE_STORE_FILE)
                storePassword FRONTM_RELEASE_STORE_PASSWORD
                keyAlias FRONTM_RELEASE_KEY_ALIAS
                keyPassword FRONTM_RELEASE_KEY_PASSWORD
            }
        }
    }

    flavorDimensions "frontm"

    //change or add environment based variables here
     productFlavors {
         dev {
             dimension "frontm"
             missingDimensionStrategy "store", "play"
         }
         prod {
             dimension "frontm"
             missingDimensionStrategy "store", "play"
         }
     }

    //Add build related configurations here.
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
        debug {
            signingConfig signingConfigs.debug
        }

    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/io.netty.versions.properties'
        pickFirst 'lib/x86/libjsc.so'
        pickFirst 'lib/x86_64/libjsc.so'
        pickFirst 'lib/arm64-v8a/libjsc.so'
        pickFirst 'lib/armeabi-v7a/libjsc.so'
    }
}



dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    // debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    // debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")

    implementation 'com.facebook.fresco:fresco:1.13.0'
    implementation 'com.facebook.fresco:animated-gif:1.13.0'

    implementation project(':react-native-config')
    implementation project(':react-native-blob-util')
    implementation project(':react-native-webview')
    implementation project(':react-native-video')
    implementation project(':react-native-version-check')
    implementation project(':react-native-vector-icons')
    implementation project(':react-native-svg')
    implementation project(':react-native-sound')
    implementation project(':react-native-image-resizer')
    implementation project(':react-native-image-picker')
    implementation project(':react-native-iap')
    implementation project(':react-native-fs')
    implementation project(':react-native-document-picker')
    implementation(project(':react-native-device-info')){
        exclude group: 'com.google.android.gms', module: 'play-services-gcm'
    }
    implementation project(':react-native-contacts')
    implementation(project(':react-native-camera')){
        exclude group: 'com.google.android.gms'
    }
    implementation project(':react-native-background-timer')
    implementation project(':react-native-android-open-settings')
    implementation project(':react-native-sqlite-storage')
    
    implementation 'com.google.android.gms:play-services-auth:20.2.0'
    implementation 'com.google.android.gms:play-services-base:18.1.0'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.android.gms:play-services-basement:18.1.0'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation "com.android.support:support-v4:27.1.1" // added this
    implementation 'com.android.support:appcompat-v7:27.0.0'
    implementation 'com.android.support:design:27.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    compileOnly "javax.annotation:javax.annotation-api:1.2"
    implementation 'org.conscrypt:conscrypt-android:2.0.0'
    implementation project(':react-native-sensors')
    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'

    
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    implementation project(':WebRTCModule')
    implementation project(':react-native-keep-awake')
    implementation project(':react-native-notifications')

    implementation ('com.android.support:support-annotations:28.0.0')
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'com.google.firebase:firebase-core:21.1.0'
    // Firebase messaging version that works with react-native-notifications
    implementation 'com.google.firebase:firebase-messaging:23.0.7'
    //implementation ('com.google.firebase:firebase-inappmessaging-display:20.1.2'){
    //    exclude group: 'com.google.android.gms', module: 'play-services-ads-identifier'
    //}
    implementation 'io.grpc:grpc-okhttp:1.32.2'
    implementation 'com.google.guava:guava:27.0.1-android'

    implementation(project(':react-native-jitsi-meet')) {
        exclude group: 'com.facebook.react',module:'react-native-vector-icons'
        exclude group: 'com.facebook.react',module:'react-native-svg'
        exclude group: 'com.facebook.react',module:'react-native-webview'
        exclude group: 'com.facebook.react',module:'react-native-webrtc'
        exclude group: 'com.facebook.react',module:'react-native-community-async-storage'
        exclude group: 'com.facebook.react',module:'react-native-splash-screen'
        exclude group: 'com.facebook.react', module:'react-native-device-info'
        exclude group: 'com.facebook.react',module:'react-native-video'
        exclude group: 'com.facebook.react',module:'react-native-sound'
        exclude group: 'com.facebook.react',module:'react-native-blob-util'
        exclude group: 'com.facebook.react',module:'react-native-google-signin'
        exclude group: 'com.facebook.react',module:'react-native-background-timer'
        exclude group: 'com.facebook.react',module:'react-native-async-storage'
        exclude group: 'com.facebook.react',module:'react-native-community_netinfo'
        exclude group: 'com.facebook.react',module:'react-native-keep-awake'
        exclude group: 'com.facebook.react',module:'react-native-community_clipboard'
        exclude group: 'com.facebook.react',module:'react-native-masked-view_masked-view'
        exclude group: 'com.facebook.react',module:'react-native-slider'
        exclude group: 'com.facebook.react',module:'react-native-gesture-handler'
        exclude group: 'com.facebook.react',module:'react-native-reanimated'
        exclude group: 'com.facebook.react',module:'react-native-screens'
        exclude group: 'com.facebook.react',module:'react-native-safe-area-context'
        //exclude group: 'com.facebook', module:'hermes'
    } 
}

apply plugin: 'com.google.gms.google-services'
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)